spring:
  config:
    import: "optional:classpath:application-security.yml"
  application:
    name: "LOCO - Local Collection Platform"
  datasource:
    url: "${custom.datasource.url}"
    username: "${custom.datasource.username}"
    driver-class-name: "org.postgresql.Driver"
    hikari:
      maximum-pool-size: 5
  jpa:
    database-platform: "org.hibernate.dialect.PostgreSQLDialect"
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        jdbc:
          batch_size: 100
        order_inserts: true
        order_updates: true
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: "${custom.oauth2.google.client-id}"
            client-secret: "${custom.oauth2.google.client-secret}"
            scope:
              - profile
              - email

          naver:
            client-id: "${custom.oauth2.naver.client-id}"
            client-secret: "${custom.oauth2.naver.client-secret}"
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            scope:
              - name
              - email
              - profile_image
            client-name: Naver
        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
#            user-info-authentication-method: header
            user-name-attribute: response # Naver 응답 값 resultCode, message, response 중 response 지정

#      resourceserver:
#        jwt:
#          issuer-uri: https://accounts.google.com/.well-known/openid-configuration
